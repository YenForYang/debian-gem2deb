.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GEM2DEB 1"
.TH GEM2DEB 1 "2018-10-06" "" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
gem2deb \- converts Rubygems' .gem file into Debian package
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBgem2deb\fR [\fI\s-1OPTIONS\s0\fR] \fI\s-1GEMNAME\s0\fR (to download the gem with \fIgem fetch\fR)
.PP
\&\fBgem2deb\fR [\fI\s-1OPTIONS\s0\fR] \fI\s-1GEMFILE\s0\fR (to use a local .gem file)
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgem2deb\fR converts the gem into a Debian source package, and then will attempt
to build it. The process is made of several steps.
.PP
First, \fBgem2deb\fR converts the gem file to a tar.gz archive containing a
metadata.yml file with the Gem specification. This is equivalent to what
\&\fBgem2tgz\fR does.
.PP
Then, \fBgem2deb\fR unpacks the tar.gz archive and prepares a Debian source
package, guess many of the defaults from the files included in the archive, or
the Gem specification. This is equivalent to what \fBdh-make-ruby\fR does.
\&\fBgem2deb\fR cannot determine all parameters for obvious reasons. It is recommended
to search for the \*(L"\s-1FIXME\*(R"\s0 string in the \fIdebian/\fR directory.
The generated Debian source package uses \fBdh_ruby\fR to build the package.
.PP
Finally, \fBgem2deb\fR tries to build the source and binary packages using
\&\fBdpkg-buildpackage\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-t\fR, \fB\-\-only\-tarball\fR" 4
.IX Item "-t, --only-tarball"
Stop after creating the tar.gz archive.
.IP "\fB\-s\fR, \fB\-\-only\-source\-dir\fR" 4
.IX Item "-s, --only-source-dir"
Stop after preparing the Debian source package directory (do not attempt to
build the package).
.IP "\fB\-S\fR, \fB\-\-only\-debian\-source\fR" 4
.IX Item "-S, --only-debian-source"
Only build a Debian source package (do not build binary packages).
.IP "\fB\-p \s-1PACKAGE\s0\fR, \fB\-\-package \s-1PACKAGE\s0\fR" 4
.IX Item "-p PACKAGE, --package PACKAGE"
Specify package name (default: ruby\-*).
Passed to dh-make-ruby. See \fB\fBdh\-make\-ruby\fB\|(1)\fR.
.IP "\fB\-\-ruby\-versions \s-1VERSIONS\s0\fR" 4
.IX Item "--ruby-versions VERSIONS"
Ruby versions to build the package for (default: all).
Passed to dh-make-ruby. See \fB\fBdh\-make\-ruby\fB\|(1)\fR.
.IP "\fB\-\-no\-wnpp\-check\fR" 4
.IX Item "--no-wnpp-check"
Prevents \fBdh-make-ruby\fR to check wnpp reports to get the number of a possible
\&\s-1ITP\s0 (intend to package) bug report. By default, \fBdh-make-ruby\fR does check these
reports, which requires an Internet access.
.IP "\fB\-o\fR, \fB\-\-offline\fR" 4
.IX Item "-o, --offline"
Prevents \fBdh-make-ruby\fR from accessing the internet at all.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Displays \fBgem2deb\fR usage information.
.IP "\fB\-v\fR, \fB\-\-version\fR" 4
.IX Item "-v, --version"
Displays \fBgem2deb\fR version information.
.SH "HOW THE .GEM \-> .TGZ CONVERSION WORKS"
.IX Header "HOW THE .GEM -> .TGZ CONVERSION WORKS"
A gem named \fImygem\-0.1.0.gem\fR is converted in a tarball with
(approximately) the following steps:
.PP
.Vb 9
\&  mkdir mygem\-0.1.0
\&  cd mygem\-0.1.0
\&  tar xfm /absolute/path/to/mygem\-0.1.0.gem
\&  tar xzfm data.tar.gz
\&  zcat metadata.gz > metadata.yml
\&  rm \-f data.tar.gz metadata.gz
\&  cd ..
\&  tar czf mygem\-0.1.0.tar.gz mygem\-0.1.0
\&  rm \-rf mygem\-0.1.0
.Ve
.PP
The generated tarball has the following properties:
.IP "Files" 4
.IX Item "Files"
It contains all the files the gem contains.
.IP "Metadata" 4
.IX Item "Metadata"
It contains the gem metadata in a file named ``metadata.yml`` inside
the \fImygem\-0.1.0\fR directory.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdh_ruby\fR(1)
.SH "COPYRIGHT AND AUTHORS"
.IX Header "COPYRIGHT AND AUTHORS"
Copyright (c) 2011, Lucas Nussbaum <lucas@debian.org>
.PP
This program is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
